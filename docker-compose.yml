version: '3.8'

services:
  mysql:
    restart: unless-stopped
    image: mysql:8.0
    container_name: mysql
    hostname: mysql
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - ansible_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      timeout: 20s
      retries: 10
      interval: 10s

  semaphore:
    restart: unless-stopped
    ports:
      - 3000:3000
    image: semaphoreui/semaphore:latest
    container_name: semaphore
    env_file:
      - .env
    environment:
      SEMAPHORE_DB_USER: ${SEMAPHORE_DB_USER}
      SEMAPHORE_DB_PASS: ${SEMAPHORE_DB_PASS}
      SEMAPHORE_DB_HOST: mysql
      SEMAPHORE_DB_PORT: 3306
      SEMAPHORE_DB_DIALECT: mysql
      SEMAPHORE_DB: ${MYSQL_DATABASE}
      SEMAPHORE_ADMIN_PASSWORD: ${SEMAPHORE_ADMIN_PASSWORD}
      SEMAPHORE_ADMIN_NAME: ${SEMAPHORE_ADMIN_NAME}
      SEMAPHORE_ADMIN_EMAIL: ${SEMAPHORE_ADMIN_EMAIL}
      SEMAPHORE_ACCESS_KEY_ENCRYPTION: gs72mPntFATGJs9qK1pQ0MD1k8CgEf4o
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./ansible:/ansible
    networks:
      - ansible_network

  ansible:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ansible
    hostname: ansible
    stdin_open: true
    tty: true
    volumes:
      - ./ansible:/ansible
    working_dir: /ansible
    command: /bin/bash
    networks:
      - ansible_network
    ports:
      - "2222:22"

volumes:
  mysql_data:
    driver: local

networks:
  ansible_network:
    driver: bridge